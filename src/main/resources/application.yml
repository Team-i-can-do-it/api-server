server:
  port: 8080
  servlet:
    context-path: /api/${api.version}
  name: iCanDo
  forward-headers-strategy: framework
  tomcat:
    mbeanregistry:
      enabled: true
    threads:
      max: 500
      min-spare: 100
    max-connections: 20000
    accept-count: 5000
    connection-timeout: 10000
api:
  version: v1

swagger:
  server:
    url: ${SWAGGER_SERVER_URL:http://localhost:8080/api/v1}

springdoc:
  swagger-ui:
    path: /swagger-ui.html

spring:
  config:
    import: optional:file:./.env, optional:classpath:prompts.yml
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  sql:
    init:
      mode: never
  ai:
    openai:
      chat:
        options:
          model: ${AI_MODEL}
        completions-path: /v1/chat/completions
      base-url: https://openrouter.ai/api
      api-key: ${OPENAI_API_KEY}
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD}
      lettuce:
        pool:
          max-active: 50 # 최대 활성 연결 수
          max-idle: 20 # 최대 유휴 연결 수
          min-idle: 5 # 최소 유휴 연결 수
          max-wait: 3000ms # 풀에서 연결을 얻기 위해 대기하는 최대 시간
      timeout: 60000
  cache:
    jcache:
      config: classpath:ehcache.xml


  jwt:
    secret: ${JWT_SECRET_KEY}
    access:
      expiration: 3600000
      header: Authorization
    refresh:
      expiration: 1209600000
      header: Authorization-refresh
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            authorization-grant-type: authorization_code

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: naver
            authorization-grant-type: authorization_code



        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


mail:
  naver:
    host: smtp.naver.com #네이버 메일 서버 주소
    port: 465 #네이버 SMTP 포트
    username: ${MAIL_USERNAME}
    password : ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true #SMTP 인증여부(필수)
      mail.smtp.ssl.enable: true #SMTP 보안 연결 사용 여부
      mail.smtp.ssl.trust: smtp.naver.com

cloud:
  aws:
    s3:
      bucketName: ${BUCKET_NAME}
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
